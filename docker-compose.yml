version: '3'
services:

    #PHP Service
    app_stolen_car_api:
        build:
            context: .
            dockerfile: Dockerfile
        image: digitalocean.com/php
        container_name: app_stolen_car_api
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./config_server/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - stolen_car_api-network

    #Nginx Service
    webserver_stolen_car_api:
        image: nginx:alpine
        container_name: webserver_stolen_car_api
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./config_server/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - stolen_car_api-network

    #MySQL Service
    db_stolen_car:
        image: mysql:8.0
        container_name: db_stolen_car
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: stolen_car_api_db
            MYSQL_ROOT_PASSWORD: stolen_car_api
            MYSQL_USER: andrii
            MYSQL_PASSWORD: stolen_car_api
                # https://www.digitalocean.com/community/tutorials/how-to-set-up-laravel-nginx-and-mysql-with-docker-compose-on-ubuntu-20-04
                # docker-compose exec db2 bash
                # CREATE USER 'newuser'@'%' IDENTIFIED BY 'password';
                # GRANT ALL PRIVILEGES ON laravel.* TO 'andrii'@'%';
                # FLUSH PRIVILEGES;
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - data_stolen_cars:/var/lib/mysql/
            - ./config_server/mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - stolen_car_api-network

    #Adminer Service
    adminer:
        image: adminer
        restart: always
        ports:
            - 8080:8080
        networks:
            - stolen_car_api-network

#    #Postman Service
#    postman:
#        image: postman/newman_ubuntu1404
#        container_name: postman
#        restart: unless-stopped
#        tty: true
#        ports:
#            - "8081:8080"
#        networks:
#            - stolen_car_api-network
#        volumes:
#            - ./config_server/newman:/etc/newman

#Docker Networks
networks:
    stolen_car_api-network:
        driver: bridge
#Volumes
volumes:
    data_stolen_cars:
        driver: local




